/*
 * genericStructure1.h
 *
 *  Created on: 13 May 2020
 *      Author: Carlos
 */

#ifndef ECLIENTE_H_
#define ECLIENTE_H_

#define QTYCLIENTE 9
#define EMPTY 0
#define NON_EMPTY 1


typedef struct{
	char nombre[64];
	char apellido[64];
	char cuil[64];
	int ideCliente;
	int isEmpty;
}eCliente;

/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
void seteClienteStatus(eCliente* eClienteArray,int arrayClenght,int value);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int findEmptyPlace(eCliente* eClienteArray,int arrayClenght, int value);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int seteCliente(eCliente* eClienteArray, int arrayClenght);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int generateIdeCliente();
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
void showeCliente(eCliente* eClienteArray, int index, char* fieldTitle1, char* fieldTitle2, char* fieldTitle3,char* fieldTitle4);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int findeClienteById(eCliente* eClienteArray, int arrayCLength, int id);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int modifyeCliente(eCliente* eClienteArray, int arrayCLength);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int showListeCliente(eCliente* eClienteArray, int arrayCLength, char* fieldTitle1, char* fieldTitle2, char* fieldTitle3,char* fieldTitle4);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
//int deleteMembereCliente(eCliente* eClienteArray, int arrayCLength, ePrestamo* ePrestamoArray, arrayPLength);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
int deleteeClienteById(eCliente* eClienteArray,int arrayCLength, int id);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
char getConfirmationeCliente(char* message);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
//int findeClienteByText(eCliente eClienteArray[],int arrayLenght, char* text);
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
/**
 * \brief : recibe un puntero a char con un mensaje y lo muestra con el formato estadarizado.
 * \param : *mensajes puntero a char con el mensaje que se mostrará al usuario.
 * \return : esta funcion no retorna nada.
 */
//int sorteClienteByTextField(eCliente eClienteArray[],int arrayLength);

//int showListePrestamoByClient(ePrestamo* ePrestamoArray, int arrayPLength, int idCliente, char* fieldTitle1, char* fieldTitle2, char* fieldTitle3,char* fieldTitle4);

//int deleteePrestamoByClienteId(ePrestamo* ePrestamoArray,int arrayPLength, int id);


int checkIfEmptyeCliente(eCliente* eClienteArray ,int arrayCLength);

#endif /* ECLIENTE_H_ */
